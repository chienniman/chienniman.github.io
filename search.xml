<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>2025雲端部署平台實測心得</title>
      <link href="/2025-cloud-hosting-review/"/>
      <url>/2025-cloud-hosting-review/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>身為一個後端工程師，總是需要一個穩定的雲伺服器來部署專案或測試環境。這幾年用過不少服務，從Cloud到 Serverless都深入研究過，每個都有讓我印象深刻的體驗，今天分享一下真實使用心得，希望能幫到正在選擇的朋友們避開一些坑。</p><h2 id="我的雲伺服器使用背景"><a href="#我的雲伺服器使用背景" class="headerlink" title="我的雲伺服器使用背景"></a>我的雲伺服器使用背景</h2><p>主要是為了：</p><ul><li>公司專案</li><li>個人作品集</li><li>遊戲伺服器（Minecraft、Terraria）</li></ul><h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><h3 id="1-Google-Cloud-Platform-GCP"><a href="#1-Google-Cloud-Platform-GCP" class="headerlink" title="1. Google Cloud Platform (GCP)"></a>1. Google Cloud Platform (GCP)</h3><p><strong>使用時間</strong>: 2 年<br><strong>規格</strong>: 2vCPU + 4(GB) RAM<br><strong>花費</strong>: 一個月1000台幣左右<br><strong>評分</strong>: 8&#x2F;10</p><h4 id="使用體驗"><a href="#使用體驗" class="headerlink" title="使用體驗"></a>使用體驗</h4><p>GCP 的介面又多又雜，要選參數：機器類型、映像檔、網路設定等，但是延遲低，支援多個可用區，99%以上的時間都可以順暢使用，這聽起來是應該的，畢竟錢都花了，埋個伏筆，看到後面你就知道了，總之各種支援都很完善，價格合理，提供300美元的適用額度，但是要綁信用卡，對無卡的學生很不方便，就算有卡很多人也不敢綁，原因很簡單，如果設定錯，開錯機器，續費功能沒設定好，等收到帳單真的欲哭無淚，而且有時候不見得是設定問題，例如某些API放在外網，無聊的人一直狂呼叫，選擇的又是按量計費，那就真的完蛋，不過除去這些潛在問題，我還是很推薦GCP來部署生產環境的服務，使用過程中我幾乎沒遇到因為機器問題導致服務出現異常。</p><h3 id="2-SugarHosts-2025-x2F-7-倒閉"><a href="#2-SugarHosts-2025-x2F-7-倒閉" class="headerlink" title="2. SugarHosts (2025&#x2F;7 倒閉)"></a>2. SugarHosts (2025&#x2F;7 倒閉)</h3><p><strong>使用時間</strong>: 1個月<br><strong>規格</strong>: 1vCPU + 1(GB) RAM<br><strong>花費</strong>: 不到200台幣<br><strong>評分</strong>: 1&#x2F;10</p><h4 id="使用體驗-1"><a href="#使用體驗-1" class="headerlink" title="使用體驗"></a>使用體驗</h4><p>上網跳出這家的廣告，主打便宜，特別是選擇年繳方案，算起來的價格超低，低規格機器只要幾百&#x2F;每月，但一次刷一年還是要1000~3000台幣，怕踩雷先買一個月，印象中是選擇美國西部的節點，因為台灣節點很貴，登入機器時悲劇發生了，根本完全連不上阿，ssh都進不去要玩個毛，更搞笑的是ping ip也超時，第一天就遇到這種情況趕緊聯繫客服，要求退款，沒想到一搞就是長達3天的踢皮球，結論:不給退，行吧，這200多小錢就當學費了，網路上推薦文看看就好，真的踩雷才知道難受，值得一提的是如果開發者&#x2F;用戶都在台灣，還是盡量選擇有提供台灣節點的平台，不然連不上這機器就是個擺設。</p><h3 id="3-Surfercloud"><a href="#3-Surfercloud" class="headerlink" title="3. Surfercloud"></a>3. Surfercloud</h3><p><strong>使用時間</strong>: 1年<br><strong>規格</strong>: 1vCPU + 1(GB) RAM<br><strong>花費</strong>: 一年300台幣<br><strong>評分</strong>: 5&#x2F;10</p><h4 id="使用體驗-2"><a href="#使用體驗-2" class="headerlink" title="使用體驗"></a>使用體驗</h4><p>看youtube的時候跳出廣告，一年只要10美金，沒看評價就直接買了，整體管理介面算精美，也能成功連線到機器，一開始用的時候打指令安裝各種包都很順暢，當時想說撿到寶了，需求主要是要練習資安技巧與架設個人作品集，如果打sudo lastb，可以看到一大堆登入失敗的訊息，為了分析我寫了一個腳本去分析ip來源，中國、俄羅斯、美國的攻擊者最多，呼叫幾千次暴力破解估計是透過自動化機器人，用fail2ban意義不大，所以我就把root登入關了，僅限密鑰登陸，這樣的安全性非常高，比白名單有效多了，缺點是電腦重灌或是密鑰遺失就gg了，把要測試的line機器人部署上去後我就忘了這件事，後來買新電腦就把這台筆電送給我妹了，結果就是自己被鎖在機器外登不進去笑死，就算進到dashboard上想重設密碼也不行，只能重灌機器了，反正幾十秒就完成了，但這次進去機器就感到不對勁，打一個ssh指令要等待幾十秒，常用的ls、cat、touch指令也要等幾十秒，完全非常難受，才過幾個月而已品質劇烈下降，雖然知道300元能動就該謝天謝地，但如此卡頓誰敢續費，甚至有點懷疑這家服務商有超賣機器的可能，能使用的實際資源遠遠低於購買時所承諾的，看來機器規格只能理解成上限，上網查了評論才發現名聲非常差，各種卡頓。</p><h3 id="4-Render"><a href="#4-Render" class="headerlink" title="4. Render"></a>4. Render</h3><p><strong>使用時間</strong>: 1.5年<br><strong>規格</strong>: 0.1vCPU + 512(MB) RAM<br><strong>花費</strong>: 0<br><strong>評分</strong>: 7.5&#x2F;10</p><h4 id="使用體驗-3"><a href="#使用體驗-3" class="headerlink" title="使用體驗"></a>使用體驗</h4><p>heroku在2022年轉為付費後，許多個人開發者的後端作品直接失效，我也不例外，當時急需尋找替代品，因為只是學生，沒有信用卡，就算有也不敢綁定，只能找提供免費方案的平台，當時就選擇了Render作為部署平台，坦白說他的介面操作簡單易懂，commit push會自動觸發CICD，非常方便，當時有兩個專案需要部署，個人作品集與line機器人，很輕鬆就部署上去了，但是免費版本有個嚴重的限制，超過15分鐘沒有活動，伺服器會進入睡眠狀態，有人來造訪網站或是使用服務時，可能遇到API錯誤或是頁面無法顯示，繞過去的方法就是用排程每幾秒就呼叫一次，但當時發現作品集有些使用者會打不開，而且機器人也需要先喚醒才能使用，但這都可以理解，畢竟免費方案主要是給開發者測試或是使用的，公司還是需要營利，但是對我想要部署長期的服務來說，實在是不太適合，於是後來就把這個blog搬家到GitHub page，同時又去中華電信買了每年400元的網域名來使用，使用者付費很合理的，總結來說，這是一個不錯的平台，要長期經營可以考慮付費方案。</p><h3 id="5-Vercel"><a href="#5-Vercel" class="headerlink" title="5. Vercel"></a>5. Vercel</h3><p><strong>使用時間</strong>: 2年<br><strong>規格</strong>: 4Hrs cpu + 360GB-Hrs &#x2F; 每月<br><strong>花費</strong>: 0<br><strong>評分</strong>: 8.5&#x2F;10</p><h4 id="使用體驗-4"><a href="#使用體驗-4" class="headerlink" title="使用體驗"></a>使用體驗</h4><p>看推薦文章發現這個平台，提供大量的現成模板可以一鍵部署，不過如果選擇的包含後端、資料庫，還是必須設定環境變數、資料庫連線網址、帳密、金鑰、第三方API等，但整體還是相當方便快速，在部屬頁面也可以看到目前的網址跟每一次部屬的網址，個人使用起來覺得非常方便，但這個平台還是有一些限制存在，API主要是透過Serverless Functions，也就是沒有狀態，請求進來伺服器處理完就會被銷毀，成本可以大幅降低，因為伺服器的負載不太可能每時每刻都滿載，有許多的閒置時間，那傳統的虛擬機器上如果選擇包月方案還是得為這些沒有使用到的資源付費，雖然有方便、易拓展、成本低的優勢，但如果想部署長連線像是聊天室，或是有狀態的訂單伺服器，可能就不太適合，整體來說這個平台非常適合開發者、學生、小型商家部署流量不高的網站。</p>]]></content>
      
      
      <categories>
          
          <category> 心得 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPS </tag>
            
            <tag> GCP </tag>
            
            <tag> SugarHosts </tag>
            
            <tag> 踩雷 </tag>
            
            <tag> 心得 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>老舊筆電重生指南：用 Lubuntu 打造你的專屬輕量級開發機</title>
      <link href="/my-first-lubuntu-laptop/"/>
      <url>/my-first-lubuntu-laptop/</url>
      
        <content type="html"><![CDATA[<h2 id="為什麼要讓老舊筆電重生？"><a href="#為什麼要讓老舊筆電重生？" class="headerlink" title="為什麼要讓老舊筆電重生？"></a>為什麼要讓老舊筆電重生？</h2><p>你是不是也有一台放在抽屜裡積灰塵的舊筆電？每次開機等到天荒地老，風扇轉得像飛機要起飛一樣？別急著丟掉啊！</p><p>其實這些看似要退休的筆電還能發揮不少功用：</p><ul><li>拿來寫程式、測試一些小專案</li><li>架個人網站或是簡單的API服務</li><li>跑一些資料處理的腳本</li><li>當作學習Linux的練習機，壞了也不心疼</li></ul><p>我的想法很簡單：花最少的錢，讓舊硬體發揮最後的價值。與其讓它們在抽屜裡當電子垃圾，不如給它們第二次生命。</p><h2 id="我的舊筆電改造實例"><a href="#我的舊筆電改造實例" class="headerlink" title="我的舊筆電改造實例"></a>我的舊筆電改造實例</h2><p><img src="/images/posts/my-first-lubuntu-laptop/asus-laptop.jpg" alt="asus-laptop示意圖，非實物"></p><h3 id="硬體規格（2021年入手，8000元）"><a href="#硬體規格（2021年入手，8000元）" class="headerlink" title="硬體規格（2021年入手，8000元）"></a>硬體規格（2021年入手，8000元）</h3><ul><li><strong>處理器</strong>：Intel Celeron N4020 (1.1 GHz, 最高 2.8 GHz)</li><li><strong>記憶體</strong>：4GB DDR4</li><li><strong>儲存空間</strong>：64GB eMMC</li><li><strong>螢幕</strong>：11.6” HD 霧面螢幕</li><li><strong>重量</strong>：1.05KG（輕巧便攜）</li></ul><h3 id="Windows-時期的各種問題"><a href="#Windows-時期的各種問題" class="headerlink" title="Windows 時期的各種問題"></a>Windows 時期的各種問題</h3><p>這台筆電本來裝的是Windows 10 S模式，用起來真的很痛苦：</p><ul><li>開機超級慢，每次都要等個兩分鐘才能用</li><li>開幾個Chrome分頁CPU就飆到90%，整台電腦卡到不行</li><li>64GB的儲存空間扣掉系統後根本不夠用</li><li>偶爾還會黑屏當機，真的很煩躁</li></ul><h3 id="裝了Lubuntu之後完全不一樣"><a href="#裝了Lubuntu之後完全不一樣" class="headerlink" title="裝了Lubuntu之後完全不一樣"></a>裝了Lubuntu之後完全不一樣</h3><ul><li>開機時間從兩分鐘縮短到30秒左右</li><li>可以同時開發環境、瀏覽器、終端機都不會卡</li><li>內建Python、Git、Node.js等開發工具，很方便</li><li>舊硬體配上免費的作業系統，CP值超高</li></ul><h2 id="為什麼選擇-Lubuntu？"><a href="#為什麼選擇-Lubuntu？" class="headerlink" title="為什麼選擇 Lubuntu？"></a>為什麼選擇 Lubuntu？</h2><h3 id="與其他-Linux-發行版比較"><a href="#與其他-Linux-發行版比較" class="headerlink" title="與其他 Linux 發行版比較"></a>與其他 Linux 發行版比較</h3><table><thead><tr><th>發行版</th><th>記憶體需求</th><th>適用場景</th><th>學習難度</th></tr></thead><tbody><tr><td><strong>Lubuntu</strong></td><td>512MB 起</td><td>老舊硬體、輕量使用</td><td>⭐⭐ 簡單</td></tr><tr><td>Ubuntu</td><td>2GB 起</td><td>一般桌面使用</td><td>⭐⭐⭐ 中等</td></tr><tr><td>Debian</td><td>1GB 起</td><td>伺服器、進階用戶</td><td>⭐⭐⭐⭐ 較難</td></tr><tr><td>CentOS</td><td>1GB 起</td><td>企業伺服器</td><td>⭐⭐⭐⭐⭐ 困難</td></tr></tbody></table><h3 id="Lubuntu的好處"><a href="#Lubuntu的好處" class="headerlink" title="Lubuntu的好處"></a>Lubuntu的好處</h3><ul><li>輕量級設計：雖然基於Ubuntu，但吃的資源非常少</li><li>專為舊硬體優化：LXDE桌面環境跑起來很順</li><li>對開發者友善：軟體安裝和管理都很方便</li><li>文檔資源豐富：Ubuntu生態系的好處就是資料很多</li></ul><h2 id="動手改造：完整安裝指南"><a href="#動手改造：完整安裝指南" class="headerlink" title="動手改造：完整安裝指南"></a>動手改造：完整安裝指南</h2><h3 id="準備工作"><a href="#準備工作" class="headerlink" title="準備工作"></a>準備工作</h3><p>開始之前先準備這些東西：</p><ul><li>一支8GB以上的USB隨身碟</li><li>記得備份重要資料（等等會格式化硬碟）</li><li>下載Lubuntu的ISO檔案</li><li>準備Rufus燒錄工具</li></ul><h3 id="步驟一：下載Lubuntu映像檔"><a href="#步驟一：下載Lubuntu映像檔" class="headerlink" title="步驟一：下載Lubuntu映像檔"></a>步驟一：下載Lubuntu映像檔</h3><p>到<a href="https://lubuntu.me/downloads/">Lubuntu官方網站</a>下載最新的LTS版本。建議選LTS版本是因為：</p><ul><li>有5年的安全更新</li><li>比較穩定，不會有奇怪的bug</li><li>軟體相容性比較好</li></ul><h3 id="步驟二：製作開機碟"><a href="#步驟二：製作開機碟" class="headerlink" title="步驟二：製作開機碟"></a>步驟二：製作開機碟</h3><p>用<a href="https://rufus.ie/">Rufus</a>來製作開機碟，這個軟體很簡單好用：</p><p><img src="/images/posts/my-first-lubuntu-laptop/rufus.jpg" alt="使用 Rufus 製作開機碟"></p><p>設定很簡單：</p><ol><li>選擇你的USB隨身碟</li><li>選擇剛下載的Lubuntu ISO檔</li><li>分割區配置看你的電腦選UEFI或BIOS就好</li></ol><h3 id="步驟三：進入UEFI設定"><a href="#步驟三：進入UEFI設定" class="headerlink" title="步驟三：進入UEFI設定"></a>步驟三：進入UEFI設定</h3><p>不同廠牌的筆電進UEFI的按鍵不太一樣：</p><ul><li>ASUS：開機時按F2</li><li>Acer：開機時按F2或Del</li><li>HP：開機時按F10或Esc</li><li>Lenovo：開機時按F1或F2</li><li>Dell：開機時按F2或F12</li></ul><p><img src="/images/posts/my-first-lubuntu-laptop/uefi.jpg" alt="UEFI 設定畫面"></p><p>主要要做這幾件事：</p><ol><li>把USB設為第一開機順序</li><li>如果有Secure Boot就關掉</li><li>存檔重開機</li></ol><h3 id="步驟四：開始安裝Lubuntu"><a href="#步驟四：開始安裝Lubuntu" class="headerlink" title="步驟四：開始安裝Lubuntu"></a>步驟四：開始安裝Lubuntu</h3><p>插入USB開機碟重新啟動，會看到GRUB選單：</p><p><img src="/images/posts/my-first-lubuntu-laptop/install-1.jpg" alt="Lubuntu 開機選單"></p><p>這裡有幾個選項：</p><ul><li>Try Lubuntu：先試用看看，不會動到硬碟</li><li>Install Lubuntu：直接安裝（建議先試用確認硬體都能正常運作）</li><li>Safe Graphics：如果螢幕有問題就選這個</li><li>Test Memory：測試記憶體有沒有壞掉</li></ul><h3 id="步驟五：系統試用與硬體檢測"><a href="#步驟五：系統試用與硬體檢測" class="headerlink" title="步驟五：系統試用與硬體檢測"></a>步驟五：系統試用與硬體檢測</h3><p>建議先選「Try Lubuntu」確保所有硬體都能正常運作：</p><p><img src="/images/posts/my-first-lubuntu-laptop/install-2.jpg" alt="Lubuntu 桌面預覽"></p><p>要測試的項目：</p><ul><li>WiFi能不能連線</li><li>音效有沒有聲音</li><li>觸控板&#x2F;滑鼠靈不靈敏</li><li>USB孔能不能用</li><li>螢幕亮度調節正不正常</li></ul><p>確認都沒問題後，點桌面上的「Install Lubuntu」圖示開始安裝。</p><h3 id="步驟六：安裝設定"><a href="#步驟六：安裝設定" class="headerlink" title="步驟六：安裝設定"></a>步驟六：安裝設定</h3><p><img src="/images/posts/my-first-lubuntu-laptop/install-3.jpg" alt="安裝設定選項"></p><p>語言和地區設定：<br><img src="/images/posts/my-first-lubuntu-laptop/install-4.jpg" alt="選擇地理位置"><br>選擇「Taiwan」確保時區對，這也會影響軟體更新的伺服器選擇。</p><p>鍵盤設定：<br><img src="/images/posts/my-first-lubuntu-laptop/install-5.jpg" alt="鍵盤配置"><br>建議選「Chinese (Traditional)」，之後還是可以改。</p><p>硬碟分割（很重要！）：<br><img src="/images/posts/my-first-lubuntu-laptop/install-6.jpg" alt="硬碟分割設定"></p><p>注意：這個步驟會把整個硬碟的資料都清掉！</p><p>對於64GB硬碟的建議分割：</p><ul><li>根目錄(&#x2F;)：50GB，用ext4格式</li><li>swap：4GB（跟記憶體大小一樣）</li><li>&#x2F;home：剩下的空間，放使用者資料</li></ul><p>使用者帳號設定：<br><img src="/images/posts/my-first-lubuntu-laptop/install-7.jpg" alt="設定使用者密碼"></p><p>安全考量：</p><ul><li>用強一點的密碼（至少8位，有數字和符號）</li><li>勾選「要求密碼登入」比較安全</li><li>電腦名稱建議用英文，網路辨識比較方便</li></ul><p>最終確認：<br><img src="/images/posts/my-first-lubuntu-laptop/install-8.jpg" alt="安裝前最終確認"></p><p>仔細檢查所有設定，確認沒問題就按「Install」。整個安裝過程大概20-30分鐘。</p><h2 id="裝完之後要做的事"><a href="#裝完之後要做的事" class="headerlink" title="裝完之後要做的事"></a>裝完之後要做的事</h2><h3 id="1-更新系統"><a href="#1-更新系統" class="headerlink" title="1. 更新系統"></a>1. 更新系統</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update &amp;&amp; sudo apt upgrade -y</span><br></pre></td></tr></table></figure><h3 id="2-裝中文輸入法"><a href="#2-裝中文輸入法" class="headerlink" title="2. 裝中文輸入法"></a>2. 裝中文輸入法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install ibus-chewing</span><br></pre></td></tr></table></figure><h3 id="3-裝開發工具"><a href="#3-裝開發工具" class="headerlink" title="3. 裝開發工具"></a>3. 裝開發工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Git版本控制</span></span><br><span class="line">sudo apt install git</span><br><span class="line"></span><br><span class="line"><span class="comment"># Node.js開發環境  </span></span><br><span class="line">curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash -</span><br><span class="line">sudo apt install nodejs</span><br><span class="line"></span><br><span class="line"><span class="comment"># Python開發環境</span></span><br><span class="line">sudo apt install python3-pip</span><br><span class="line"></span><br><span class="line"><span class="comment"># VS Code編輯器</span></span><br><span class="line">wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor &gt; packages.microsoft.gpg</span><br><span class="line">sudo install -o root -g root -m 644 packages.microsoft.gpg /etc/apt/trusted.gpg.d/</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb [arch=amd64,arm64,armhf signed-by=/etc/apt/trusted.gpg.d/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main&quot;</span> | sudo <span class="built_in">tee</span> /etc/apt/sources.list.d/vscode.list</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install code</span><br></pre></td></tr></table></figure><h2 id="實際用途"><a href="#實際用途" class="headerlink" title="實際用途"></a>實際用途</h2><h3 id="當開發機用"><a href="#當開發機用" class="headerlink" title="當開發機用"></a>當開發機用</h3><ul><li>寫Python腳本：處理資料、網頁爬蟲</li><li>Web前端開發：HTML、CSS、JavaScript</li><li>做小型API：Flask、FastAPI專案</li><li>寫文檔：Markdown、技術文件</li></ul><h3 id="當小伺服器用"><a href="#當小伺服器用" class="headerlink" title="當小伺服器用"></a>當小伺服器用</h3><ul><li>家用檔案伺服器：Samba、FTP服務</li><li>個人網站：Nginx + PHP&#x2F;Python</li><li>資料庫：MySQL、PostgreSQL</li><li>自動化：定時備份、資料同步</li></ul><h3 id="學習實驗"><a href="#學習實驗" class="headerlink" title="學習實驗"></a>學習實驗</h3><ul><li>練習Linux指令：有個安全的環境可以亂搞</li><li>學系統管理：用戶管理、網路設定</li><li>測試資安工具：網路掃描、滲透測試</li></ul><h2 id="效能調校小技巧"><a href="#效能調校小技巧" class="headerlink" title="效能調校小技巧"></a>效能調校小技巧</h2><h3 id="1-關掉不需要的服務"><a href="#1-關掉不需要的服務" class="headerlink" title="1. 關掉不需要的服務"></a>1. 關掉不需要的服務</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 看看有哪些服務在開機時啟動</span></span><br><span class="line">systemctl list-unit-files --<span class="built_in">type</span>=service --state=enabled</span><br><span class="line"></span><br><span class="line"><span class="comment"># 關掉用不到的服務（比如藍牙）</span></span><br><span class="line">sudo systemctl <span class="built_in">disable</span> bluetooth</span><br></pre></td></tr></table></figure><h3 id="2-用ZRAM提升記憶體效率"><a href="#2-用ZRAM提升記憶體效率" class="headerlink" title="2. 用ZRAM提升記憶體效率"></a>2. 用ZRAM提升記憶體效率</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install zram-config</span><br></pre></td></tr></table></figure><h3 id="3-SSD最佳化"><a href="#3-SSD最佳化" class="headerlink" title="3. SSD最佳化"></a>3. SSD最佳化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在/etc/fstab中加入noatime參數</span></span><br><span class="line">sudo nano /etc/fstab</span><br><span class="line"><span class="comment"># 範例：UUID=xxx / ext4 defaults,noatime 0 1</span></span><br></pre></td></tr></table></figure><h2 id="划算嗎？"><a href="#划算嗎？" class="headerlink" title="划算嗎？"></a>划算嗎？</h2><h3 id="花費成本"><a href="#花費成本" class="headerlink" title="花費成本"></a>花費成本</h3><ul><li>舊筆電回收利用：0元</li><li>USB隨身碟：200元（還可以重複使用）</li><li>時間投資：2-3小時</li></ul><h3 id="得到什麼"><a href="#得到什麼" class="headerlink" title="得到什麼"></a>得到什麼</h3><ul><li>專用開發環境：市價15,000元以上的輕薄筆電功能</li><li>24小時小型伺服器：雲端VPS每個月要300-500元</li><li>學習實驗平台：這個真的無價</li></ul><p>投資報酬率根本爆表！</p><h2 id="遇到問題怎麼辦"><a href="#遇到問題怎麼辦" class="headerlink" title="遇到問題怎麼辦"></a>遇到問題怎麼辦</h2><h3 id="常見問題解法"><a href="#常見問題解法" class="headerlink" title="常見問題解法"></a>常見問題解法</h3><p>WiFi連不上：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安裝額外驅動</span></span><br><span class="line">sudo ubuntu-drivers autoinstall</span><br></pre></td></tr></table></figure><p>中文顯示亂碼：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安裝中文字體</span></span><br><span class="line">sudo apt install fonts-noto-cjk</span><br></pre></td></tr></table></figure><p>沒有聲音：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 重新載入音效驅動</span></span><br><span class="line">sudo alsa force-reload</span><br></pre></td></tr></table></figure><h2 id="總結：給舊筆電第二次生命"><a href="#總結：給舊筆電第二次生命" class="headerlink" title="總結：給舊筆電第二次生命"></a>總結：給舊筆電第二次生命</h2><p>一開始我把這台筆電當成內網的小伺服器來用，整體表現真的很棒。用htop看記憶體使用率，閒置時比原本裝Windows低很多。之前用Windows的時候，開幾個瀏覽器分頁就會當機，因為記憶體經常飆到99%。換成Lubuntu之後完全沒有這個困擾，可以同時用GUI和CLI真的很方便，也不用被微軟強制更新綁架。</p><p>如果你也有用不到的舊筆電，真的推薦試試看重灌Lubuntu。這台筆電後來整理好就送給親戚用了，到現在2025年10月都沒有遇過任何bug，運作得很穩定。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Lubuntu </tag>
            
            <tag> 伺服器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>企業級 LineBot 開發完全攻略1：建立一個 YouBike LineBot!</title>
      <link href="/linebot-development-guide/"/>
      <url>/linebot-development-guide/</url>
      
        <content type="html"><![CDATA[<h2 id="為什麼-LineBot-是台灣企業的必備武器？"><a href="#為什麼-LineBot-是台灣企業的必備武器？" class="headerlink" title="為什麼 LineBot 是台灣企業的必備武器？"></a>為什麼 LineBot 是台灣企業的必備武器？</h2><p>Line 是台灣最常見的通訊軟體之一，市佔率高達 90% 以上，Messenger、Telegram 都無法與其相提並論，無論是外出購物，講電話，送禮物，都離不開他，獨佔市場的好處是許多商家會透過 Line 提升品牌知名度、觸及目標客群、促進銷售轉換，增加顧客忠誠度，進而達到很好的營銷效果，在這個注意力稀缺的時代，<strong>主動觸達客戶</strong>比被動等待更有價值。LineBot 不只是通訊軟體，更是能創造實際商業價值的利器！</p><p>飲料店、銀行、行銷公司都大量使用 LineBot 作為營銷手法，比起投放廣告，將促銷訊息推播給使用者能來更好的效果，看 youtube 時大多數人看到不相關的廣告，第一反應是想趕緊關掉，因為使用者不感興趣，Line推播完全不同，使用者大多數是自願加入官方帳號，後續企業精準投放促銷訊息，以我為例，我有加入玉山銀行的官方帳號，最新的投資訊息就會第一時間送到我的 Line 上，節省了許多查資料的時間，也避開了不相關的廣告。</p><p><img src="/images/posts/linebot-development-guide/e-sun-bank.webp" alt="玉山銀行 LINE 官方帳號"></p><h2 id="導入-LineBot-能為你的事業帶來什麼？"><a href="#導入-LineBot-能為你的事業帶來什麼？" class="headerlink" title="導入 LineBot 能為你的事業帶來什麼？"></a>導入 LineBot 能為你的事業帶來什麼？</h2><p><strong>能幫使用者省下大量時間或是賺取金錢的就是有價值的服務</strong>，舉個簡單的例子，小明是個高中生早上固定騎youbike上下學，youbike雖然方便，但可能遇到沒車可借或是沒空位可還的尷尬情境，這時候就會浪費大量的時間跑到其他站點借車或是還車，其實微程式公司有開發youbike的官方帳號，讓使用者可以查詢附近站點的可借車輛與可停空位，但這個過程沒辦法自動化，對一個每天固定通勤的人很浪費時間，如果換個思路，小名每天都能在上課、放學前收到附近站點的通知。</p><h2 id="實際案例1：YouBike-bot-通勤助手"><a href="#實際案例1：YouBike-bot-通勤助手" class="headerlink" title="實際案例1：YouBike bot 通勤助手"></a>實際案例1：YouBike bot 通勤助手</h2><p>YouBike LineBot 採用事件驅動架構，主要包含三個核心功能流程：</p><p>當使用者加入機器人或發送訊息時，系統會自動觸發註冊事件，後端伺服器將記錄並儲存重要識別資訊（User ID、Group ID、Chat Room ID）至資料庫，建立用戶檔案以支援個人化服務。</p><p>使用者透過 Line 介面點擊查詢按鈕後，請求會經由 Line 官方伺服器轉發至我們的 Webhook API。後端伺服器接收到請求後，立即向 YouBike 官方 API 發送請求，獲取最新的站點資訊（可借車輛數、可還空位數），並將處理後的結果即時回傳給使用者。</p><p>使用者可自訂提醒時間，系統會根據設定的排程，主動推播個人化的站點資訊至指定的個人聊天、群組或聊天室，實現真正的「預知式服務」。</p><p><img src="/images/posts/linebot-development-guide/line-bot-flow2.webp" alt="YouBike LineBot 架構圖"></p><h2 id="建立-LINE-Bot-頻道"><a href="#建立-LINE-Bot-頻道" class="headerlink" title="建立 LINE Bot 頻道"></a>建立 LINE Bot 頻道</h2><ol><li>前往 <a href="https://developers.line.biz/en/">LINE Developers</a></li><li>LINE 帳號登入，建立 message API 頻道<br><img src="/images/posts/linebot-development-guide/select-message-api.webp" alt="選擇 Message API"></li><li>登錄公司資訊<br><img src="/images/posts/linebot-development-guide/create-line-channel-form.webp" alt="填寫頻道資訊"></li><li>確認輸入內容</li></ol><h2 id="開發-Line-Bot"><a href="#開發-Line-Bot" class="headerlink" title="開發 Line Bot"></a>開發 Line Bot</h2><p>Line 官方提供了大量的範例，千萬不要從零開始造輪子，請直接clone官方nodejs範例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/line/line-bot-sdk-nodejs.git</span><br></pre></td></tr></table></figure><p>如果需要其他語言，這邊直接提供連結<br><a href="https://github.com/line/line-bot-sdk-python.git">line-bot-sdk-python</a><br><a href="https://github.com/line/line-bot-sdk-go.git">line-bot-sdk-go</a><br>確保環境變數有設定secret跟accessToken，這兩個分別可以在<strong>Basic settings</strong>跟<strong>Messaging API</strong>找到<br><img src="/images/posts/linebot-development-guide/replace-secret-and-accessToken.webp" alt="設定 Token 和 Secret"></p><h2 id="部署-Line-Bot"><a href="#部署-Line-Bot" class="headerlink" title="部署 Line Bot"></a>部署 Line Bot</h2><p>可以選擇購買雲端主機或是雲平台，想測試了話推薦部署在<a href="https://render.com/">Render</a>，先從GitHub repo中選擇要推送的儲存庫，<img src="/images/posts/linebot-development-guide/select-render-git-rpeo.webp" alt="選擇 GitHub 儲存庫">，然後設定部署相關資訊，就可以輕鬆建立了，可以在dashbord中成功管理運行中的服務。<br><img src="/images/posts/linebot-development-guide/render-service-running.jpg" alt="Render 服務運行狀態"></p><h2 id="ngrok-讓你有開箱即用的域名與Https"><a href="#ngrok-讓你有開箱即用的域名與Https" class="headerlink" title="ngrok 讓你有開箱即用的域名與Https"></a>ngrok 讓你有開箱即用的域名與Https</h2><p>開發完 LineBot 後最頭痛的就是部署問題。辛苦寫好的程式部署到伺服器上，webhook url 會是 http:&#x2F;&#x2F;你的伺服器IP&#x2F;webhook ，要把這個網址註冊到 LINE 官方伺服器，讓 LINE 知道要把訊息轉發到哪裡。<br>問題來了，LINE 官方非常龜毛，<strong>只接受 HTTPS 的網址</strong>，如果你的伺服器沒有 SSL 憑證，LINE 會直接拒絕你的 webhook。這也是有道理的啦，畢竟安全性考量，你的 API 對 LINE 來說就是第三方服務，當然要嚴格一點。<br>如果不使用Render等雲平台，而是選擇雲端機器，這時候就需要利用 ngrok ，把電腦上的 localhost 映射成 HTTPS 的公開網址，而且完全免費。<br><img src="/images/posts/linebot-development-guide/ngrok-port-4200.jpg" alt="ngrok 設定畫面"><br>映射完成後把對外的webhook url貼到Line webhook settings上勁大功告成了，這時候機器人就可以順利接收使用者的指令了。</p><h3 id="測試機器人"><a href="#測試機器人" class="headerlink" title="測試機器人"></a>測試機器人</h3><p>打指令獲得youbike站點資訊<br><img src="/images/posts/linebot-development-guide/ubike-robot-result.webp" alt="YouBike 機器人測試結果"></p><h2 id="為您省下多少錢"><a href="#為您省下多少錢" class="headerlink" title="為您省下多少錢?"></a>為您省下多少錢?</h2><p>請專案公司開發一個客制化linebot，<strong>報價通常在五萬左右</strong>，但透過Render平台部署 + Ngrok代理伺服器，讓開發者與小型商家能夠用低廉的費用導入並整合linebot服務，如果未來客流量變大，這兩個平台也提供實惠的付費方案，每個月1000以內的費用就能穩定的運行伺服器。</p>]]></content>
      
      
      <categories>
          
          <category> LineBot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LineBot </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
