<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>2025雲端部署平台實測心得</title>
      <link href="/2025-cloud-hosting-review/"/>
      <url>/2025-cloud-hosting-review/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>身為一個後端工程師，總是需要一個穩定的雲伺服器來部署專案或測試環境。這幾年用過不少服務，從Cloud到 Serverless都深入研究過，每個都有讓我印象深刻的體驗，今天分享一下真實使用心得，希望能幫到正在選擇的朋友們避開一些坑。</p><h2 id="我的雲伺服器使用背景"><a href="#我的雲伺服器使用背景" class="headerlink" title="我的雲伺服器使用背景"></a>我的雲伺服器使用背景</h2><p>主要是為了：</p><ul><li>公司專案</li><li>個人作品集</li><li>遊戲伺服器（Minecraft、Terraria）</li></ul><h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><h3 id="1-Google-Cloud-Platform-GCP"><a href="#1-Google-Cloud-Platform-GCP" class="headerlink" title="1. Google Cloud Platform (GCP)"></a>1. Google Cloud Platform (GCP)</h3><p><strong>使用時間</strong>: 2 年<br><strong>規格</strong>: 2vCPU + 4(GB) RAM<br><strong>花費</strong>: 一個月1000台幣左右<br><strong>評分</strong>: 8&#x2F;10</p><h4 id="使用體驗"><a href="#使用體驗" class="headerlink" title="使用體驗"></a>使用體驗</h4><p>GCP 的介面又多又雜，要選參數：機器類型、映像檔、網路設定等，但是延遲低，支援多個可用區，99%以上的時間都可以順暢使用，這聽起來是應該的，畢竟錢都花了，埋個伏筆，看到後面你就知道了，總之各種支援都很完善，價格合理，提供300美元的適用額度，但是要綁信用卡，對無卡的學生很不方便，就算有卡很多人也不敢綁，原因很簡單，如果設定錯，開錯機器，續費功能沒設定好，等收到帳單真的欲哭無淚，而且有時候不見得是設定問題，例如某些API放在外網，無聊的人一直狂呼叫，選擇的又是按量計費，那就真的完蛋，不過除去這些潛在問題，我還是很推薦GCP來部署生產環境的服務，使用過程中我幾乎沒遇到因為機器問題導致服務出現異常。</p><h3 id="2-SugarHosts-2025-x2F-7-倒閉"><a href="#2-SugarHosts-2025-x2F-7-倒閉" class="headerlink" title="2. SugarHosts (2025&#x2F;7 倒閉)"></a>2. SugarHosts (2025&#x2F;7 倒閉)</h3><p><strong>使用時間</strong>: 1個月<br><strong>規格</strong>: 1vCPU + 1(GB) RAM<br><strong>花費</strong>: 不到200台幣<br><strong>評分</strong>: 1&#x2F;10</p><h4 id="使用體驗-1"><a href="#使用體驗-1" class="headerlink" title="使用體驗"></a>使用體驗</h4><p>上網跳出這家的廣告，主打便宜，特別是選擇年繳方案，算起來的價格超低，低規格機器只要幾百&#x2F;每月，但一次刷一年還是要1000~3000台幣，怕踩雷先買一個月，印象中是選擇美國西部的節點，因為台灣節點很貴，登入機器時悲劇發生了，根本完全連不上阿，ssh都進不去要玩個毛，更搞笑的是ping ip也超時，第一天就遇到這種情況趕緊聯繫客服，要求退款，沒想到一搞就是長達3天的踢皮球，結論:不給退，行吧，這200多小錢就當學費了，網路上推薦文看看就好，真的踩雷才知道難受，值得一提的是如果開發者&#x2F;用戶都在台灣，還是盡量選擇有提供台灣節點的平台，不然連不上這機器就是個擺設。</p><h3 id="3-Surfercloud"><a href="#3-Surfercloud" class="headerlink" title="3. Surfercloud"></a>3. Surfercloud</h3><p><strong>使用時間</strong>: 1年<br><strong>規格</strong>: 1vCPU + 1(GB) RAM<br><strong>花費</strong>: 一年300台幣<br><strong>評分</strong>: 5&#x2F;10</p><h4 id="使用體驗-2"><a href="#使用體驗-2" class="headerlink" title="使用體驗"></a>使用體驗</h4><p>看youtube的時候跳出廣告，一年只要10美金，沒看評價就直接買了，整體管理介面算精美，也能成功連線到機器，一開始用的時候打指令安裝各種包都很順暢，當時想說撿到寶了，需求主要是要練習資安技巧與架設個人作品集，如果打sudo lastb，可以看到一大堆登入失敗的訊息，為了分析我寫了一個腳本去分析ip來源，中國、俄羅斯、美國的攻擊者最多，呼叫幾千次暴力破解估計是透過自動化機器人，用fail2ban意義不大，所以我就把root登入關了，僅限密鑰登陸，這樣的安全性非常高，比白名單有效多了，缺點是電腦重灌或是密鑰遺失就gg了，把要測試的line機器人部署上去後我就忘了這件事，後來買新電腦就把這台筆電送給我妹了，結果就是自己被鎖在機器外登不進去笑死，就算進到dashboard上想重設密碼也不行，只能重灌機器了，反正幾十秒就完成了，但這次進去機器就感到不對勁，打一個ssh指令要等待幾十秒，常用的ls、cat、touch指令也要等幾十秒，完全非常難受，才過幾個月而已品質劇烈下降，雖然知道300元能動就該謝天謝地，但如此卡頓誰敢續費，甚至有點懷疑這家服務商有超賣機器的可能，能使用的實際資源遠遠低於購買時所承諾的，看來機器規格只能理解成上限，上網查了評論才發現名聲非常差，各種卡頓。</p><h3 id="4-Render"><a href="#4-Render" class="headerlink" title="4. Render"></a>4. Render</h3><p><strong>使用時間</strong>: 1.5年<br><strong>規格</strong>: 0.1vCPU + 512(MB) RAM<br><strong>花費</strong>: 0<br><strong>評分</strong>: 7.5&#x2F;10</p><h4 id="使用體驗-3"><a href="#使用體驗-3" class="headerlink" title="使用體驗"></a>使用體驗</h4><p>heroku在2022年轉為付費後，許多個人開發者的後端作品直接失效，我也不例外，當時急需尋找替代品，因為只是學生，沒有信用卡，就算有也不敢綁定，只能找提供免費方案的平台，當時就選擇了Render作為部署平台，坦白說他的介面操作簡單易懂，commit push會自動觸發CICD，非常方便，當時有兩個專案需要部署，個人作品集與line機器人，很輕鬆就部署上去了，但是免費版本有個嚴重的限制，超過15分鐘沒有活動，伺服器會進入睡眠狀態，有人來造訪網站或是使用服務時，可能遇到API錯誤或是頁面無法顯示，繞過去的方法就是用排程每幾秒就呼叫一次，但當時發現作品集有些使用者會打不開，而且機器人也需要先喚醒才能使用，但這都可以理解，畢竟免費方案主要是給開發者測試或是使用的，公司還是需要營利，但是對我想要部署長期的服務來說，實在是不太適合，於是後來就把這個blog搬家到GitHub page，同時又去中華電信買了每年400元的網域名來使用，使用者付費很合理的，總結來說，這是一個不錯的平台，要長期經營可以考慮付費方案。</p><h3 id="5-Vercel"><a href="#5-Vercel" class="headerlink" title="5. Vercel"></a>5. Vercel</h3><p><strong>使用時間</strong>: 2年<br><strong>規格</strong>: 4Hrs cpu + 360GB-Hrs &#x2F; 每月<br><strong>花費</strong>: 0<br><strong>評分</strong>: 8.5&#x2F;10</p><h4 id="使用體驗-4"><a href="#使用體驗-4" class="headerlink" title="使用體驗"></a>使用體驗</h4><p>看推薦文章發現這個平台，提供大量的現成模板可以一鍵部署，不過如果選擇的包含後端、資料庫，還是必須設定環境變數、資料庫連線網址、帳密、金鑰、第三方API等，但整體還是相當方便快速，在部屬頁面也可以看到目前的網址跟每一次部屬的網址，個人使用起來覺得非常方便，但這個平台還是有一些限制存在，API主要是透過Serverless Functions，也就是沒有狀態，請求進來伺服器處理完就會被銷毀，成本可以大幅降低，因為伺服器的負載不太可能每時每刻都滿載，有許多的閒置時間，那傳統的虛擬機器上如果選擇包月方案還是得為這些沒有使用到的資源付費，雖然有方便、易拓展、成本低的優勢，但如果想部署長連線像是聊天室，或是有狀態的訂單伺服器，可能就不太適合，整體來說這個平台非常適合開發者、學生、小型商家部署流量不高的網站。</p>]]></content>
      
      
      <categories>
          
          <category> 心得 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPS </tag>
            
            <tag> GCP </tag>
            
            <tag> SugarHosts </tag>
            
            <tag> 踩雷 </tag>
            
            <tag> 心得 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一台Lubuntu筆電</title>
      <link href="/my-first-lubuntu-laptop/"/>
      <url>/my-first-lubuntu-laptop/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>以前就想要安裝Linux作業系統，長期習慣Windows介面的我遲未行動，一部分是因為許多Steam遊戲不支援，<br>舊筆電(使用5年)出現花屏，可能是顯示卡、螢幕問題，拿去修理效益比實在不大，但又有外出攜帶需求，結合價格、使用<br>頻率、開發需求、硬體規格等多方要素，2021年購入這台不到一萬的迷你筆電。</p><h2 id="規格"><a href="#規格" class="headerlink" title="規格"></a>規格</h2><ul><li>處理器：IntelR Celeron N4020 Processor 1.1 GHz (4M Cache, up to 2.8 GHz)</li><li>記憶體(內建&#x2F;最大)：4GB DDR4</li><li>硬碟：64G EMMC</li></ul><p>大小跟平板差不多(11.6”HD霧面寬螢幕)，重量1.05KG，適合外出，預設安裝Windows10 S模式(只允許 Microsoft Store 上提供的應用程式)，整體來說開機相當快速，能上網、文書處理、前後端開發、跑資料庫，不過有時會黑屏閃退，這台小筆電開太多Chrome分頁，CPU就會飆到80、90%，所以桌機就漸漸取代它，直到最近整理時，打算安裝輕量級的Ubuntu版本，使其起死回生。</p><h2 id="Lubuntu"><a href="#Lubuntu" class="headerlink" title="Lubuntu"></a>Lubuntu</h2><p>Linux有許多版本，適合桌面使用的Ubuntu，常用於伺服器和商業環境，許多其他Linux上游的Debian，CentOS等。<br>Ubuntu又有許多分支，UbuntuKylin、Kubuntu、Xubuntu、Edubuntu、Mythbuntu，本機選用的Lubuntu輕量、快速，適合老舊機型、規格低下的筆電。</p><h2 id="映像檔"><a href="#映像檔" class="headerlink" title="映像檔"></a>映像檔</h2><p>先到官方網站下載映像檔，<img src="/images/posts/my-first-lubuntu-laptop/jammy-fish.jpg" alt="Ubuntu Jammy Jellyfish 下載頁面"></p><h2 id="燒錄開機碟"><a href="#燒錄開機碟" class="headerlink" title="燒錄開機碟"></a>燒錄開機碟</h2><p><img src="/images/posts/my-first-lubuntu-laptop/rufus.jpg" alt="使用 Rufus 製作開機碟"><br>使用rufus製作開機碟<br>1.裝置，選擇外接硬碟(USB)<br>2.開機模式，選擇剛剛下載的Lubuntu映像檔<br>3.資料分割方式，依照UEFI、BIOS選擇</p><h2 id="UEFI-統一可擴充韌體接口-開機"><a href="#UEFI-統一可擴充韌體接口-開機" class="headerlink" title="UEFI(統一可擴充韌體接口)開機"></a>UEFI(統一可擴充韌體接口)開機</h2><p>Asus筆電開機時長按F2，進入UEFI，開機順序更改為USB開機<br><img src="/images/posts/my-first-lubuntu-laptop/uefi.jpg" alt="UEFI 設定畫面"></p><h2 id="啟動安裝"><a href="#啟動安裝" class="headerlink" title="啟動安裝"></a>啟動安裝</h2><p>grub 啟動畫面。<br>1.安裝，選擇Try 或 Install Lubuntu。<br>2.顯卡問題，比如較新的 nvidia 卡，選擇safe graphics。<br>3.測試ram，選擇Test memory。<br><img src="/images/posts/my-first-lubuntu-laptop/install-1.jpg" alt="Lubuntu 開機選單"></p><h2 id="實時預覽"><a href="#實時預覽" class="headerlink" title="實時預覽"></a>實時預覽</h2><p>啟動後，探索 Lubuntu 並確保所有硬體都能正常工作。準備好後，雙擊桌面左上角的圖標<br><img src="/images/posts/my-first-lubuntu-laptop/install-2.jpg" alt="Lubuntu 桌面預覽"></p><h2 id="設定"><a href="#設定" class="headerlink" title="設定"></a>設定</h2><p><img src="/images/posts/my-first-lubuntu-laptop/install-3.jpg" alt="安裝設定選項"></p><h2 id="位置"><a href="#位置" class="headerlink" title="位置"></a>位置</h2><p><img src="/images/posts/my-first-lubuntu-laptop/install-4.jpg" alt="選擇地理位置"></p><h2 id="鍵盤"><a href="#鍵盤" class="headerlink" title="鍵盤"></a>鍵盤</h2><p><img src="/images/posts/my-first-lubuntu-laptop/install-5.jpg" alt="鍵盤配置"></p><h2 id="切割硬碟"><a href="#切割硬碟" class="headerlink" title="切割硬碟"></a>切割硬碟</h2><p><img src="/images/posts/my-first-lubuntu-laptop/install-6.jpg" alt="硬碟分割設定"><br>刪除磁盤。格式化磁盤，請備份所有重要資料。</p><h2 id="密碼配置"><a href="#密碼配置" class="headerlink" title="密碼配置"></a>密碼配置</h2><p><img src="/images/posts/my-first-lubuntu-laptop/install-7.jpg" alt="設定使用者密碼"></p><h2 id="最後配置檢查"><a href="#最後配置檢查" class="headerlink" title="最後配置檢查"></a>最後配置檢查</h2><p><img src="/images/posts/my-first-lubuntu-laptop/install-8.jpg" alt="安裝前最終確認"></p><p>重新啟動，大功告成</p><h2 id="參考資料-amp-圖片"><a href="#參考資料-amp-圖片" class="headerlink" title="參考資料&amp;圖片"></a>參考資料&amp;圖片</h2><p><a href="https://manual.lubuntu.me/stable/1/Installing_lubuntu.html">lubuntu手冊</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Lubuntu </tag>
            
            <tag> 筆電 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>企業級 LineBot 開發完全攻略1：建立一個 YouBike LineBot!</title>
      <link href="/linebot-development-guide/"/>
      <url>/linebot-development-guide/</url>
      
        <content type="html"><![CDATA[<h2 id="為什麼-LineBot-是台灣企業的必備武器？"><a href="#為什麼-LineBot-是台灣企業的必備武器？" class="headerlink" title="為什麼 LineBot 是台灣企業的必備武器？"></a>為什麼 LineBot 是台灣企業的必備武器？</h2><p>Line 是台灣最常見的通訊軟體之一，市佔率高達 90% 以上，Messenger、Telegram 都無法與其相提並論，無論是外出購物，講電話，送禮物，都離不開他，獨佔市場的好處是許多商家會透過 Line 提升品牌知名度、觸及目標客群、促進銷售轉換，增加顧客忠誠度，進而達到很好的營銷效果，在這個注意力稀缺的時代，<strong>主動觸達客戶</strong>比被動等待更有價值。LineBot 不只是通訊軟體，更是能創造實際商業價值的利器！</p><p>飲料店、銀行、行銷公司都大量使用 LineBot 作為營銷手法，比起投放廣告，將促銷訊息推播給使用者能來更好的效果，看 youtube 時大多數人看到不相關的廣告，第一反應是想趕緊關掉，因為使用者不感興趣，Line推播完全不同，使用者大多數是自願加入官方帳號，後續企業精準投放促銷訊息，以我為例，我有加入玉山銀行的官方帳號，最新的投資訊息就會第一時間送到我的 Line 上，節省了許多查資料的時間，也避開了不相關的廣告。</p><p><img src="/images/posts/linebot-development-guide/e-sun-bank.webp" alt="玉山銀行 LINE 官方帳號"></p><h2 id="導入-LineBot-能為你的事業帶來什麼？"><a href="#導入-LineBot-能為你的事業帶來什麼？" class="headerlink" title="導入 LineBot 能為你的事業帶來什麼？"></a>導入 LineBot 能為你的事業帶來什麼？</h2><p><strong>能幫使用者省下大量時間或是賺取金錢的就是有價值的服務</strong>，舉個簡單的例子，小明是個高中生早上固定騎youbike上下學，youbike雖然方便，但可能遇到沒車可借或是沒空位可還的尷尬情境，這時候就會浪費大量的時間跑到其他站點借車或是還車，其實微程式公司有開發youbike的官方帳號，讓使用者可以查詢附近站點的可借車輛與可停空位，但這個過程沒辦法自動化，對一個每天固定通勤的人很浪費時間，如果換個思路，小名每天都能在上課、放學前收到附近站點的通知。</p><h2 id="實際案例1：YouBike-bot-通勤助手"><a href="#實際案例1：YouBike-bot-通勤助手" class="headerlink" title="實際案例1：YouBike bot 通勤助手"></a>實際案例1：YouBike bot 通勤助手</h2><p>YouBike LineBot 採用事件驅動架構，主要包含三個核心功能流程：</p><p>當使用者加入機器人或發送訊息時，系統會自動觸發註冊事件，後端伺服器將記錄並儲存重要識別資訊（User ID、Group ID、Chat Room ID）至資料庫，建立用戶檔案以支援個人化服務。</p><p>使用者透過 Line 介面點擊查詢按鈕後，請求會經由 Line 官方伺服器轉發至我們的 Webhook API。後端伺服器接收到請求後，立即向 YouBike 官方 API 發送請求，獲取最新的站點資訊（可借車輛數、可還空位數），並將處理後的結果即時回傳給使用者。</p><p>使用者可自訂提醒時間，系統會根據設定的排程，主動推播個人化的站點資訊至指定的個人聊天、群組或聊天室，實現真正的「預知式服務」。</p><p><img src="/images/posts/linebot-development-guide/line-bot-flow2.webp" alt="YouBike LineBot 架構圖"></p><h2 id="建立-LINE-Bot-頻道"><a href="#建立-LINE-Bot-頻道" class="headerlink" title="建立 LINE Bot 頻道"></a>建立 LINE Bot 頻道</h2><ol><li>前往 <a href="https://developers.line.biz/en/">LINE Developers</a></li><li>LINE 帳號登入，建立 message API 頻道<br><img src="/images/posts/linebot-development-guide/select-message-api.webp" alt="選擇 Message API"></li><li>登錄公司資訊<br><img src="/images/posts/linebot-development-guide/create-line-channel-form.webp" alt="填寫頻道資訊"></li><li>確認輸入內容</li></ol><h2 id="開發-Line-Bot"><a href="#開發-Line-Bot" class="headerlink" title="開發 Line Bot"></a>開發 Line Bot</h2><p>Line 官方提供了大量的範例，千萬不要從零開始造輪子，請直接clone官方nodejs範例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/line/line-bot-sdk-nodejs.git</span><br></pre></td></tr></table></figure><p>如果需要其他語言，這邊直接提供連結<br><a href="https://github.com/line/line-bot-sdk-python.git">line-bot-sdk-python</a><br><a href="https://github.com/line/line-bot-sdk-go.git">line-bot-sdk-go</a><br>確保環境變數有設定secret跟accessToken，這兩個分別可以在<strong>Basic settings</strong>跟<strong>Messaging API</strong>找到<br><img src="/images/posts/linebot-development-guide/replace-secret-and-accessToken.webp" alt="設定 Token 和 Secret"></p><h2 id="部署-Line-Bot"><a href="#部署-Line-Bot" class="headerlink" title="部署 Line Bot"></a>部署 Line Bot</h2><p>可以選擇購買雲端主機或是雲平台，想測試了話推薦部署在<a href="https://render.com/">Render</a>，先從GitHub repo中選擇要推送的儲存庫，<img src="/images/posts/linebot-development-guide/select-render-git-rpeo.webp" alt="選擇 GitHub 儲存庫">，然後設定部署相關資訊，就可以輕鬆建立了，可以在dashbord中成功管理運行中的服務。<br><img src="/images/posts/linebot-development-guide/render-service-running.jpg" alt="Render 服務運行狀態"></p><h2 id="ngrok-讓你有開箱即用的域名與Https"><a href="#ngrok-讓你有開箱即用的域名與Https" class="headerlink" title="ngrok 讓你有開箱即用的域名與Https"></a>ngrok 讓你有開箱即用的域名與Https</h2><p>開發完 LineBot 後最頭痛的就是部署問題。辛苦寫好的程式部署到伺服器上，webhook url 會是 http:&#x2F;&#x2F;你的伺服器IP&#x2F;webhook ，要把這個網址註冊到 LINE 官方伺服器，讓 LINE 知道要把訊息轉發到哪裡。<br>問題來了，LINE 官方非常龜毛，<strong>只接受 HTTPS 的網址</strong>，如果你的伺服器沒有 SSL 憑證，LINE 會直接拒絕你的 webhook。這也是有道理的啦，畢竟安全性考量，你的 API 對 LINE 來說就是第三方服務，當然要嚴格一點。<br>如果不使用Render等雲平台，而是選擇雲端機器，這時候就需要利用 ngrok ，把電腦上的 localhost 映射成 HTTPS 的公開網址，而且完全免費。<br><img src="/images/posts/linebot-development-guide/ngrok-port-4200.jpg" alt="ngrok 設定畫面"><br>映射完成後把對外的webhook url貼到Line webhook settings上勁大功告成了，這時候機器人就可以順利接收使用者的指令了。</p><h3 id="測試機器人"><a href="#測試機器人" class="headerlink" title="測試機器人"></a>測試機器人</h3><p>打指令獲得youbike站點資訊<br><img src="/images/posts/linebot-development-guide/ubike-robot-result.webp" alt="YouBike 機器人測試結果"></p><h2 id="為您省下多少錢"><a href="#為您省下多少錢" class="headerlink" title="為您省下多少錢?"></a>為您省下多少錢?</h2><p>請專案公司開發一個客制化linebot，<strong>報價通常在五萬左右</strong>，但透過Render平台部署 + Ngrok代理伺服器，讓開發者與小型商家能夠用低廉的費用導入並整合linebot服務，如果未來客流量變大，這兩個平台也提供實惠的付費方案，每個月1000以內的費用就能穩定的運行伺服器。</p>]]></content>
      
      
      <categories>
          
          <category> LineBot 開發 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LineBot </tag>
            
            <tag> 第三方API整合 </tag>
            
            <tag> 客戶服務 </tag>
            
            <tag> 數位轉型 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
